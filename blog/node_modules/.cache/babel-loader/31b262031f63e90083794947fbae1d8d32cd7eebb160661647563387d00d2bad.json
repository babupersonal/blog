{"ast":null,"code":"import { createElement, useRef, Fragment } from 'react';\nimport { Marked } from 'marked';\nconst htmlUnescapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\"\n};\n/** Used to match HTML entities and HTML characters. */\nconst reEscapedHtml = /&(?:amp|lt|gt|quot|#(?:0+)?39);/g;\nconst reHasEscapedHtml = RegExp(reEscapedHtml.source);\nconst unescape = (str = '') => {\n  return reHasEscapedHtml.test(str) ? str.replace(reEscapedHtml, entity => htmlUnescapes[entity] || \"'\") : str;\n};\nconst joinBase = (path, base) => {\n  if (!base) {\n    return path;\n  }\n  try {\n    return new URL(path, base).href;\n  } catch (_a) {\n    return path;\n  }\n};\nclass ReactParser {\n  constructor(options) {\n    this.renderer = options.renderer;\n  }\n  parse(tokens = []) {\n    return tokens.map(token => {\n      switch (token.type) {\n        case 'space':\n          {\n            return null;\n          }\n        case 'heading':\n          {\n            const level = token.depth;\n            return this.renderer.heading(this.parseInline(token.tokens), level);\n          }\n        case 'paragraph':\n          {\n            return this.renderer.paragraph(this.parseInline(token.tokens));\n          }\n        case 'text':\n          {\n            const textTokens = token.tokens;\n            return textTokens ? this.parseInline(textTokens) : token.text;\n          }\n        case 'blockquote':\n          {\n            const quote = this.parse(token.tokens);\n            return this.renderer.blockquote(quote);\n          }\n        case 'list':\n          {\n            const children = token.items.map(item => {\n              var _a;\n              const listItemChildren = [];\n              if (item.task) {\n                listItemChildren.push(this.renderer.checkbox((_a = item.checked) !== null && _a !== void 0 ? _a : false));\n              }\n              listItemChildren.push(this.parse(item.tokens));\n              return this.renderer.listItem(listItemChildren);\n            });\n            return this.renderer.list(children, token.ordered);\n          }\n        case 'code':\n          {\n            return this.renderer.code(token.text, token.lang);\n          }\n        case 'html':\n          {\n            return this.renderer.html(token.text);\n          }\n        case 'table':\n          {\n            const headerCells = token.header.map((cell, index) => {\n              return this.renderer.tableCell(this.parseInline(cell.tokens), {\n                header: true,\n                align: token.align[index]\n              });\n            });\n            const headerRow = this.renderer.tableRow(headerCells);\n            const header = this.renderer.tableHeader(headerRow);\n            const bodyChilren = token.rows.map(row => {\n              const rowChildren = row.map((cell, index) => {\n                return this.renderer.tableCell(this.parseInline(cell.tokens), {\n                  header: false,\n                  align: token.align[index]\n                });\n              });\n              return this.renderer.tableRow(rowChildren);\n            });\n            const body = this.renderer.tableBody(bodyChilren);\n            return this.renderer.table([header, body]);\n          }\n        case 'hr':\n          {\n            return this.renderer.hr();\n          }\n        default:\n          {\n            console.warn(`Token with \"${token.type}\" type was not found`); // eslint-disable-line no-console\n            return null;\n          }\n      }\n    });\n  }\n  parseInline(tokens = []) {\n    return tokens.map(token => {\n      switch (token.type) {\n        case 'text':\n          {\n            return this.renderer.text(unescape(token.text));\n          }\n        case 'strong':\n          {\n            return this.renderer.strong(this.parseInline(token.tokens));\n          }\n        case 'em':\n          {\n            return this.renderer.em(this.parseInline(token.tokens));\n          }\n        case 'del':\n          {\n            return this.renderer.del(this.parseInline(token.tokens));\n          }\n        case 'codespan':\n          {\n            return this.renderer.codespan(unescape(token.text));\n          }\n        case 'link':\n          {\n            return this.renderer.link(token.href, this.parseInline(token.tokens));\n          }\n        case 'image':\n          {\n            return this.renderer.image(token.href, token.text, token.title);\n          }\n        case 'html':\n          {\n            return this.renderer.html(token.text);\n          }\n        case 'br':\n          {\n            return this.renderer.br();\n          }\n        case 'escape':\n          {\n            return this.renderer.text(token.text);\n          }\n        default:\n          {\n            console.warn(`Token with \"${token.type}\" type was not found`); // eslint-disable-line no-console\n            return null;\n          }\n      }\n    });\n  }\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nvar _ReactRenderer_instances, _ReactRenderer_elId, _ReactRenderer_options, _ReactRenderer_h, _ReactRenderer_incrementElId;\nclass ReactRenderer {\n  constructor(options = {}) {\n    _ReactRenderer_instances.add(this);\n    _ReactRenderer_elId.set(this, 0);\n    _ReactRenderer_options.set(this, void 0);\n    const {\n      renderer\n    } = options;\n    __classPrivateFieldSet(this, _ReactRenderer_options, options, \"f\");\n    if (renderer && typeof renderer === 'object') {\n      Object.entries(renderer).forEach(([key, value]) => {\n        const rendererName = key;\n        const rendererFunction = value;\n        if (!this[rendererName] || rendererName === 'elementId' || typeof rendererFunction !== 'function') {\n          return;\n        }\n        this[rendererName];\n        this[rendererName] = (...args) => {\n          __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_incrementElId).call(this);\n          return rendererFunction.apply(this, args);\n        };\n      });\n    }\n  }\n  get elementId() {\n    return __classPrivateFieldGet(this, _ReactRenderer_elId, \"f\");\n  }\n  heading(children, level) {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, `h${level}`, children);\n  }\n  paragraph(children) {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'p', children);\n  }\n  link(href, text) {\n    const url = joinBase(href, __classPrivateFieldGet(this, _ReactRenderer_options, \"f\").baseURL);\n    const target = __classPrivateFieldGet(this, _ReactRenderer_options, \"f\").openLinksInNewTab ? '_blank' : null;\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'a', text, {\n      href: url,\n      target\n    });\n  }\n  image(src, alt, title = null) {\n    const url = joinBase(src, __classPrivateFieldGet(this, _ReactRenderer_options, \"f\").baseURL);\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'img', null, {\n      src: url,\n      alt,\n      title\n    });\n  }\n  codespan(code, lang = null) {\n    const className = lang ? `${__classPrivateFieldGet(this, _ReactRenderer_options, \"f\").langPrefix}${lang}` : null;\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'code', code, {\n      className\n    });\n  }\n  code(code, lang) {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'pre', this.codespan(code, lang));\n  }\n  blockquote(children) {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'blockquote', children);\n  }\n  list(children, ordered) {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, ordered ? 'ol' : 'ul', children);\n  }\n  listItem(children) {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'li', children);\n  }\n  checkbox(checked) {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'input', null, {\n      type: 'checkbox',\n      disabled: true,\n      checked\n    });\n  }\n  table(children) {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'table', children);\n  }\n  tableHeader(children) {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'thead', children);\n  }\n  tableBody(children) {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'tbody', children);\n  }\n  tableRow(children) {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'tr', children);\n  }\n  tableCell(children, flags) {\n    const tag = flags.header ? 'th' : 'td';\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, tag, children, {\n      align: flags.align\n    });\n  }\n  strong(children) {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'strong', children);\n  }\n  em(children) {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'em', children);\n  }\n  del(children) {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'del', children);\n  }\n  text(text) {\n    return text;\n  }\n  html(html) {\n    return html;\n  }\n  hr() {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'hr');\n  }\n  br() {\n    return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'br');\n  }\n}\n_ReactRenderer_elId = new WeakMap(), _ReactRenderer_options = new WeakMap(), _ReactRenderer_instances = new WeakSet(), _ReactRenderer_h = function _ReactRenderer_h(el, children = null, props = {}) {\n  const elProps = {\n    key: `marked-react-${this.elementId}`\n  };\n  __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_incrementElId).call(this);\n  return createElement(el, Object.assign(Object.assign({}, props), elProps), children);\n}, _ReactRenderer_incrementElId = function _ReactRenderer_incrementElId() {\n  __classPrivateFieldSet(this, _ReactRenderer_elId, __classPrivateFieldGet(this, _ReactRenderer_elId, \"f\") + 1, \"f\");\n};\nconst validateComponentProps = props => {\n  if (props.value && typeof props.value !== 'string') {\n    throw new TypeError(`[marked-react]: Expected value to be of type string but got ${typeof props.value}`);\n  }\n  if (props.children && typeof props.children !== 'string') {\n    throw new TypeError(`[marked-react]: Expected children to be of type string but got ${typeof props.children}`);\n  }\n};\nconst defaultProps = {\n  isInline: false,\n  breaks: false,\n  gfm: true,\n  baseURL: undefined,\n  openLinksInNewTab: true,\n  langPrefix: 'language-',\n  renderer: undefined\n};\nconst Markdown = props => {\n  var _a, _b, _c;\n  validateComponentProps(props);\n  const options = Object.assign(Object.assign({}, defaultProps), props);\n  const {\n    current: marked\n  } = useRef((_a = options.instance) !== null && _a !== void 0 ? _a : new Marked());\n  // lexer options\n  const lexerOptions = {\n    breaks: options.breaks,\n    gfm: options.gfm\n  };\n  // convert input markdown into tokens\n  const markdownString = (_c = (_b = options.value) !== null && _b !== void 0 ? _b : options.children) !== null && _c !== void 0 ? _c : '';\n  const tokens = options.isInline ? marked.Lexer.lexInline(markdownString, lexerOptions) : marked.lexer(markdownString, lexerOptions);\n  // parser options\n  const parserOptions = {\n    renderer: new ReactRenderer({\n      renderer: options.renderer,\n      baseURL: options.baseURL,\n      openLinksInNewTab: options.openLinksInNewTab,\n      langPrefix: options.langPrefix\n    })\n  };\n  const parser = new ReactParser(parserOptions);\n  const children = options.isInline ? parser.parseInline(tokens) : parser.parse(tokens);\n  return createElement(Fragment, null, children);\n};\nexport { ReactParser, ReactRenderer, Markdown as default };","map":{"version":3,"names":["createElement","useRef","Fragment","Marked","htmlUnescapes","reEscapedHtml","reHasEscapedHtml","RegExp","source","unescape","str","test","replace","entity","joinBase","path","base","URL","href","_a","ReactParser","constructor","options","renderer","parse","tokens","map","token","type","level","depth","heading","parseInline","paragraph","textTokens","text","quote","blockquote","children","items","item","listItemChildren","task","push","checkbox","checked","listItem","list","ordered","code","lang","html","headerCells","header","cell","index","tableCell","align","headerRow","tableRow","tableHeader","bodyChilren","rows","row","rowChildren","body","tableBody","table","hr","console","warn","strong","em","del","codespan","link","image","title","br","__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","__classPrivateFieldSet","set","SuppressedError","error","suppressed","message","e","Error","name","_ReactRenderer_instances","_ReactRenderer_elId","_ReactRenderer_options","_ReactRenderer_h","_ReactRenderer_incrementElId","ReactRenderer","add","Object","entries","forEach","key","rendererName","rendererFunction","args","apply","elementId","url","baseURL","target","openLinksInNewTab","src","alt","className","langPrefix","disabled","flags","tag","WeakMap","WeakSet","el","props","elProps","assign","validateComponentProps","defaultProps","isInline","breaks","gfm","undefined","Markdown","_b","_c","current","marked","instance","lexerOptions","markdownString","Lexer","lexInline","lexer","parserOptions","parser","default"],"sources":["/Users/babu/Desktop/client/blog/node_modules/marked-react/dist/marked-react.js"],"sourcesContent":["import { createElement, useRef, Fragment } from 'react';\nimport { Marked } from 'marked';\n\nconst htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n};\n/** Used to match HTML entities and HTML characters. */\nconst reEscapedHtml = /&(?:amp|lt|gt|quot|#(?:0+)?39);/g;\nconst reHasEscapedHtml = RegExp(reEscapedHtml.source);\nconst unescape = (str = '') => {\n    return reHasEscapedHtml.test(str) ? str.replace(reEscapedHtml, (entity) => htmlUnescapes[entity] || \"'\") : str;\n};\nconst joinBase = (path, base) => {\n    if (!base) {\n        return path;\n    }\n    try {\n        return new URL(path, base).href;\n    }\n    catch (_a) {\n        return path;\n    }\n};\n\nclass ReactParser {\n    constructor(options) {\n        this.renderer = options.renderer;\n    }\n    parse(tokens = []) {\n        return tokens.map((token) => {\n            switch (token.type) {\n                case 'space': {\n                    return null;\n                }\n                case 'heading': {\n                    const level = token.depth;\n                    return this.renderer.heading(this.parseInline(token.tokens), level);\n                }\n                case 'paragraph': {\n                    return this.renderer.paragraph(this.parseInline(token.tokens));\n                }\n                case 'text': {\n                    const textTokens = token.tokens;\n                    return textTokens ? this.parseInline(textTokens) : token.text;\n                }\n                case 'blockquote': {\n                    const quote = this.parse(token.tokens);\n                    return this.renderer.blockquote(quote);\n                }\n                case 'list': {\n                    const children = token.items.map((item) => {\n                        var _a;\n                        const listItemChildren = [];\n                        if (item.task) {\n                            listItemChildren.push(this.renderer.checkbox((_a = item.checked) !== null && _a !== void 0 ? _a : false));\n                        }\n                        listItemChildren.push(this.parse(item.tokens));\n                        return this.renderer.listItem(listItemChildren);\n                    });\n                    return this.renderer.list(children, token.ordered);\n                }\n                case 'code': {\n                    return this.renderer.code(token.text, token.lang);\n                }\n                case 'html': {\n                    return this.renderer.html(token.text);\n                }\n                case 'table': {\n                    const headerCells = token.header.map((cell, index) => {\n                        return this.renderer.tableCell(this.parseInline(cell.tokens), { header: true, align: token.align[index] });\n                    });\n                    const headerRow = this.renderer.tableRow(headerCells);\n                    const header = this.renderer.tableHeader(headerRow);\n                    const bodyChilren = token.rows.map((row) => {\n                        const rowChildren = row.map((cell, index) => {\n                            return this.renderer.tableCell(this.parseInline(cell.tokens), {\n                                header: false,\n                                align: token.align[index],\n                            });\n                        });\n                        return this.renderer.tableRow(rowChildren);\n                    });\n                    const body = this.renderer.tableBody(bodyChilren);\n                    return this.renderer.table([header, body]);\n                }\n                case 'hr': {\n                    return this.renderer.hr();\n                }\n                default: {\n                    console.warn(`Token with \"${token.type}\" type was not found`); // eslint-disable-line no-console\n                    return null;\n                }\n            }\n        });\n    }\n    parseInline(tokens = []) {\n        return tokens.map((token) => {\n            switch (token.type) {\n                case 'text': {\n                    return this.renderer.text(unescape(token.text));\n                }\n                case 'strong': {\n                    return this.renderer.strong(this.parseInline(token.tokens));\n                }\n                case 'em': {\n                    return this.renderer.em(this.parseInline(token.tokens));\n                }\n                case 'del': {\n                    return this.renderer.del(this.parseInline(token.tokens));\n                }\n                case 'codespan': {\n                    return this.renderer.codespan(unescape(token.text));\n                }\n                case 'link': {\n                    return this.renderer.link(token.href, this.parseInline(token.tokens));\n                }\n                case 'image': {\n                    return this.renderer.image(token.href, token.text, token.title);\n                }\n                case 'html': {\n                    return this.renderer.html(token.text);\n                }\n                case 'br': {\n                    return this.renderer.br();\n                }\n                case 'escape': {\n                    return this.renderer.text(token.text);\n                }\n                default: {\n                    console.warn(`Token with \"${token.type}\" type was not found`); // eslint-disable-line no-console\n                    return null;\n                }\n            }\n        });\n    }\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar _ReactRenderer_instances, _ReactRenderer_elId, _ReactRenderer_options, _ReactRenderer_h, _ReactRenderer_incrementElId;\nclass ReactRenderer {\n    constructor(options = {}) {\n        _ReactRenderer_instances.add(this);\n        _ReactRenderer_elId.set(this, 0);\n        _ReactRenderer_options.set(this, void 0);\n        const { renderer } = options;\n        __classPrivateFieldSet(this, _ReactRenderer_options, options, \"f\");\n        if (renderer && typeof renderer === 'object') {\n            Object.entries(renderer).forEach(([key, value]) => {\n                const rendererName = key;\n                const rendererFunction = value;\n                if (!this[rendererName] || rendererName === 'elementId' || typeof rendererFunction !== 'function') {\n                    return;\n                }\n                this[rendererName];\n                this[rendererName] = (...args) => {\n                    __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_incrementElId).call(this);\n                    return rendererFunction.apply(this, args);\n                };\n            });\n        }\n    }\n    get elementId() {\n        return __classPrivateFieldGet(this, _ReactRenderer_elId, \"f\");\n    }\n    heading(children, level) {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, `h${level}`, children);\n    }\n    paragraph(children) {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'p', children);\n    }\n    link(href, text) {\n        const url = joinBase(href, __classPrivateFieldGet(this, _ReactRenderer_options, \"f\").baseURL);\n        const target = __classPrivateFieldGet(this, _ReactRenderer_options, \"f\").openLinksInNewTab ? '_blank' : null;\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'a', text, { href: url, target });\n    }\n    image(src, alt, title = null) {\n        const url = joinBase(src, __classPrivateFieldGet(this, _ReactRenderer_options, \"f\").baseURL);\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'img', null, { src: url, alt, title });\n    }\n    codespan(code, lang = null) {\n        const className = lang ? `${__classPrivateFieldGet(this, _ReactRenderer_options, \"f\").langPrefix}${lang}` : null;\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'code', code, { className });\n    }\n    code(code, lang) {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'pre', this.codespan(code, lang));\n    }\n    blockquote(children) {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'blockquote', children);\n    }\n    list(children, ordered) {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, ordered ? 'ol' : 'ul', children);\n    }\n    listItem(children) {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'li', children);\n    }\n    checkbox(checked) {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'input', null, { type: 'checkbox', disabled: true, checked });\n    }\n    table(children) {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'table', children);\n    }\n    tableHeader(children) {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'thead', children);\n    }\n    tableBody(children) {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'tbody', children);\n    }\n    tableRow(children) {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'tr', children);\n    }\n    tableCell(children, flags) {\n        const tag = flags.header ? 'th' : 'td';\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, tag, children, { align: flags.align });\n    }\n    strong(children) {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'strong', children);\n    }\n    em(children) {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'em', children);\n    }\n    del(children) {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'del', children);\n    }\n    text(text) {\n        return text;\n    }\n    html(html) {\n        return html;\n    }\n    hr() {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'hr');\n    }\n    br() {\n        return __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_h).call(this, 'br');\n    }\n}\n_ReactRenderer_elId = new WeakMap(), _ReactRenderer_options = new WeakMap(), _ReactRenderer_instances = new WeakSet(), _ReactRenderer_h = function _ReactRenderer_h(el, children = null, props = {}) {\n    const elProps = {\n        key: `marked-react-${this.elementId}`,\n    };\n    __classPrivateFieldGet(this, _ReactRenderer_instances, \"m\", _ReactRenderer_incrementElId).call(this);\n    return createElement(el, Object.assign(Object.assign({}, props), elProps), children);\n}, _ReactRenderer_incrementElId = function _ReactRenderer_incrementElId() {\n    __classPrivateFieldSet(this, _ReactRenderer_elId, __classPrivateFieldGet(this, _ReactRenderer_elId, \"f\") + 1, \"f\");\n};\n\nconst validateComponentProps = (props) => {\n    if (props.value && typeof props.value !== 'string') {\n        throw new TypeError(`[marked-react]: Expected value to be of type string but got ${typeof props.value}`);\n    }\n    if (props.children && typeof props.children !== 'string') {\n        throw new TypeError(`[marked-react]: Expected children to be of type string but got ${typeof props.children}`);\n    }\n};\nconst defaultProps = {\n    isInline: false,\n    breaks: false,\n    gfm: true,\n    baseURL: undefined,\n    openLinksInNewTab: true,\n    langPrefix: 'language-',\n    renderer: undefined,\n};\nconst Markdown = (props) => {\n    var _a, _b, _c;\n    validateComponentProps(props);\n    const options = Object.assign(Object.assign({}, defaultProps), props);\n    const { current: marked } = useRef((_a = options.instance) !== null && _a !== void 0 ? _a : new Marked());\n    // lexer options\n    const lexerOptions = {\n        breaks: options.breaks,\n        gfm: options.gfm,\n    };\n    // convert input markdown into tokens\n    const markdownString = (_c = (_b = options.value) !== null && _b !== void 0 ? _b : options.children) !== null && _c !== void 0 ? _c : '';\n    const tokens = options.isInline\n        ? marked.Lexer.lexInline(markdownString, lexerOptions)\n        : marked.lexer(markdownString, lexerOptions);\n    // parser options\n    const parserOptions = {\n        renderer: new ReactRenderer({\n            renderer: options.renderer,\n            baseURL: options.baseURL,\n            openLinksInNewTab: options.openLinksInNewTab,\n            langPrefix: options.langPrefix,\n        }),\n    };\n    const parser = new ReactParser(parserOptions);\n    const children = options.isInline ? parser.parseInline(tokens) : parser.parse(tokens);\n    return createElement(Fragment, null, children);\n};\n\nexport { ReactParser, ReactRenderer, Markdown as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}